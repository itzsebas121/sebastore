README - Uso de Procedimientos Almacenados (Stored Procedures)
Tabla de Contenidos
Introducci√≥n

Introducci√≥n
Este documento describe c√≥mo usar los procedimientos almacenados GetCategories y GetProducts para consultar categor√≠as y productos de la base de datos.

Los procedimientos est√°n dise√±ados para facilitar la paginaci√≥n y el filtrado eficiente de productos, permitiendo manejar grandes vol√∫menes de datos sin afectar el rendimiento.

Procedimientos disponibles
Procedimiento	Descripci√≥n
GetCategories	Retorna todas las categor√≠as ordenadas por nombre.
GetProducts	Retorna productos filtrados, paginados y con conteo total.

Ejecutar GetCategories
sql
Copiar
Editar
EXEC GetCategories;
Retorna un listado con todas las categor√≠as disponibles.

√ötil para mostrar filtros o men√∫s en la interfaz de usuario.

Ejecutar GetProducts
sql
Copiar
Editar
EXEC GetProducts
    @NameFilter = NULL,
    @CategoryId = NULL,
    @MinPrice = NULL,
    @MaxPrice = NULL,
    @PageNumber = 1,
    @PageSize = 20;
Retorna dos resultados:

TotalCount: n√∫mero total de productos que cumplen los filtros.

Lista paginada de productos seg√∫n la p√°gina y tama√±o especificado.

Par√°metros de GetProducts
Par√°metro	Tipo	Descripci√≥n	Valor por defecto
@NameFilter	NVARCHAR(100)	Filtro parcial por nombre de producto (uso de LIKE %...%)	NULL
@CategoryId	INT	Filtra productos por categor√≠a espec√≠fica	NULL
@MinPrice	DECIMAL(10, 2)	Precio m√≠nimo del producto	NULL
@MaxPrice	DECIMAL(10, 2)	Precio m√°ximo del producto	NULL
@PageNumber	INT	N√∫mero de p√°gina para paginaci√≥n (comienza en 1)	1
@PageSize	INT	Cantidad de productos a devolver por p√°gina	20

Ejemplos de uso
1. Obtener todas las categor√≠as
sql
Copiar
Editar
EXEC GetCategories;
2. Obtener los primeros 20 productos sin filtros
sql
Copiar
Editar
EXEC GetProducts;
3. Buscar productos que contengan ‚Äúnetflix‚Äù
sql
Copiar
Editar
EXEC GetProducts @NameFilter = 'netflix';
4. Obtener productos de categor√≠a 1 (Streaming), p√°gina 2, 10 por p√°gina
sql
Copiar
Editar
EXEC GetProducts @CategoryId = 1, @PageNumber = 2, @PageSize = 10;
5. Filtrar por rango de precios entre 2.00 y 5.00
sql
Copiar
Editar
EXEC GetProducts @MinPrice = 2.00, @MaxPrice = 5.00;
6. Aplicar todos los filtros juntos
sql
Copiar
Editar
EXEC GetProducts 
    @NameFilter = 'netflix',
    @CategoryId = 1,
    @MinPrice = 2.00,
    @MaxPrice = 6.00,
    @PageNumber = 1,
    @PageSize = 20;
Notas importantes
Los par√°metros son opcionales; los que no se proporcionen o sean NULL no afectar√°n el filtro.

La paginaci√≥n permite manejar grandes cantidades de productos eficientemente.

Se recomienda manejar la respuesta de dos conjuntos de resultados (TotalCount y lista de productos) en la capa de aplicaci√≥n para mostrar total de p√°ginas y resultados actuales.






EXEC CreateCustomer
    @Email = 'sebastipan@example.com',
    @Password = 'MiPass123!',
    @FirstName = 'Sebas',
    @LastName = 'Tipan',
    @Phone = '0998765432';
üì• Par√°metros requeridos:
Par√°metro	Tipo	Descripci√≥n
@Email	NVARCHAR(100)	Email del cliente (debe ser v√°lido y √∫nico).
@Password	NVARCHAR(100)	Contrase√±a en texto plano (se encripta).
@FirstName	NVARCHAR(100)	Nombres del cliente (solo letras/espacios).
@LastName	NVARCHAR(100)	Apellidos del cliente (solo letras/espacios).
@Phone	NVARCHAR(20)	Tel√©fono v√°lido de Ecuador.

üì§ Salidas:
‚úîÔ∏è √âxito:
sql
Copiar
Editar
SELECT 'Customer successfully created' AS message, CustomerId;
‚ùå Posibles errores:
sql

SELECT 'Invalid characters in FirstName' AS error;
SELECT 'Invalid characters in LastName' AS error;
SELECT 'Invalid email format' AS error;
SELECT 'Email already registered' AS error;
SELECT 'Invalid Ecuadorian phone number' AS error;
SELECT 'Error t√©cnico interno (mensaje del sistema)' AS error;




EXEC LoginUser
    @Email = 'admin@example.com',
    @Password = 'Admin123!';

Este procedimiento permite iniciar sesi√≥n validando las credenciales de un usuario. Si las credenciales son correctas, devuelve el UserId, el Role, y dependiendo del rol, el AdminId o el CustomerId.

üì• Par√°metros de entrada:
Nombre	Tipo de dato	Descripci√≥n
@Email	NVARCHAR(100)	Correo electr√≥nico del usuario.
@Password	NVARCHAR(100)	Contrase√±a en texto plano.

‚ùå Posibles salidas de error (como SELECT):
Campo	Valor	Descripci√≥n
error	"Email not registered"	El correo no existe en la base de datos.
error	"Incorrect credentials"	Contrase√±a incorrecta.
error	ERROR_MESSAGE() (de SQL Server)	Error inesperado en la ejecuci√≥n.

‚úÖ Salida en caso de √©xito (como SELECT):
Campo	Tipo	Descripci√≥n
UserId	INT	Identificador √∫nico del usuario.
Role	NVARCHAR	Rol del usuario (Admin o Customer).
AdminId	INT	Solo si el usuario es admin, caso contrario NULL.
CustomerId	INT	Solo si el usuario es cliente, caso contrario NULL.